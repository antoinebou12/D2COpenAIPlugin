openapi: 3.0.2
info:
  title: Diagram To Code
  version: 1.1.1
servers:
  - url: https://openai-uml-plugin.vercel.app
    description: Production server
paths:
  /.well-known/ai-plugin.json:
    get:
      operationId: plugin_manifest
      responses:
        "200":
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Plugin Manifest
  /generate_diagram:
    post:
      operationId: generate_diagram_endpoint
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                lang:
                  type: string6
                  title: Diagram Language
                  description: The language of the diagram like plantuml, mermaid, etc.
                type:
                  type: string
                  title: Diagram Type
                  description: The type of the diagram like class, sequence, etc.
                code:
                  type: string
                  title: Diagram Code
                  description: The code of the diagram.
                theme:
                  type: string
                  title: Theme
                  description: Optional theme for the diagram.
              required:
                - lang
                - type
                - code
      responses:
        "200":
          description: Successful diagram generation
          content:
            application/json:
              schema:
                title: Response Generate Diagram Endpoint
                type: object
                properties:
                  url:
                    type: string
                    description: URL to the generated diagram.
                  message:
                    type: string
                    description: A message about the diagram generation, e.g., success or failure reason.
                required:
                  - url
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
      summary: Generate Diagram Endpoint
  /logo.png:
    get:
      operationId: plugin_logo
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
      summary: Plugin Logo
  /openapi.yaml:
    get:
      operationId: openapi_spec
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
      summary: OpenAPI Spec
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
        - loc
        - msg
        - type
      title: ValidationError
      type: object
